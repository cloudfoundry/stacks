name: Tiny Build Test

on:
  workflow_dispatch: { }
  schedule:
    # Every Sunday at 1:00 AM
    - cron: '0 1 * * 0'
  repository_dispatch:
    types: [ new-tiny-usn, new-base-image-release ]
  push:
    branches: [ main ]
    paths:
      - 'tiny/**'
      - 'bionic/cnb/build/Dockerfile'

env:
  RUN_BASE_TAG: paketotesting/run-rc:${{ github.sha }}-tiny
  RUN_CNB_TAG: paketotesting/run-rc:${{ github.sha }}-tiny-cnb
  BUILD_CNB_TAG: paketotesting/build-rc:${{ github.sha }}-tiny-cnb
  STACK_ID: io.paketo.stacks.tiny

jobs:
  test-docker-image:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16

      - name: Docker login
        run: |
          docker login -u ${{ secrets.PAKETO_TESTING_DOCKERHUB_USERNAME }} --password-stdin \
            < <(echo "${{ secrets.PAKETO_TESTING_DOCKERHUB_PASSWORD }}")

      - name: Build and push images
        uses: paketo-buildpacks/stacks/actions/create-stack@main
        with:
          build_destination: paketotesting/build-rc
          run_destination: paketotesting/run-rc
          version: ${{ github.sha }}
          stack: tiny
          stacks_dir: ${GITHUB_WORKSPACE}
          publish: true

      - name: Setup CNB Tests
        run: |
          curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.13.1/pack-v0.13.1-linux.tgz" \
            | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack
          git clone https://github.com/paketo-buildpacks/go.git /tmp/go

      - name: Test CNB Images
        run: |
          cat > /tmp/test-builder.toml << EOF
            description = "Test go builder"

            [[buildpacks]]
            image = "gcr.io/paketo-buildpacks/go:0.1.0"
            version = "0.1.0"

            [[order]]

            [[order.group]]
            id = "paketo-buildpacks/go"
            version = "0.1.0"

            [stack]
            id = "${STACK_ID}"
            build-image = "${BUILD_CNB_TAG}"
            run-image = "${RUN_CNB_TAG}"
          EOF

          pack create-builder test-builder -c /tmp/test-builder.toml
          pack build test-app --builder test-builder --path /tmp/go/integration/testdata/go_mod
          docker run -d -p 8080:8080 test-app
          curl http://localhost:8080

      - name: Get Image SHAs
        id: image-shas
        run: |
          run_base_sha="$(docker inspect --format='{{index .RepoDigests 0}}' "${RUN_BASE_TAG}")"
          run_cnb_sha="$(docker inspect --format='{{index .RepoDigests 0}}' "${RUN_CNB_TAG}")"
          build_cnb_sha="$(docker inspect --format='{{index .RepoDigests 0}}' "${BUILD_CNB_TAG}")"

          echo "::set-output name=run_base_sha::${run_base_sha}"
          echo "::set-output name=run_cnb_sha::${run_cnb_sha}"
          echo "::set-output name=build_cnb_sha::${build_cnb_sha}"

      - name: Trigger Release
        uses: paketo-buildpacks/github-config/actions/dispatch@main
        with:
          repos: paketo-buildpacks/tiny-stack-release
          token: ${{ secrets.PAKETO_BOT_GITHUB_TOKEN }}
          event: new-stack-rc
          payload: |
            {
              "run_base_image": "${{ steps.image-shas.outputs.run_base_sha }}",
              "run_cnb_image": "${{ steps.image-shas.outputs.run_cnb_sha }}",
              "build_base_image": "${{ steps.build-cnb-images.outputs.build_base_image }}",
              "build_cnb_image": "${{ steps.image-shas.outputs.build_cnb_sha }}"
            }
