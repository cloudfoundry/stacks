name: 'Test stack'

description: |
  Test stack images with pack

inputs:
  stack_id:
    description: 'Stack ID'
    required: true
  build_cnb_image:
    description: 'Build CNB image of stack'
    required: true
  run_cnb_image:
    description: 'Run CNB image of stack'
    required: true

runs:
  using: 'composite'
  steps:
  - id: setup-tests
    shell: bash
    run: |
      #!/usr/bin/env bash
      set -euo pipefail

      curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.13.1/pack-v0.13.1-linux.tgz" \
        | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack

      git clone https://github.com/paketo-buildpacks/go.git /tmp/go

  - id: run-tests
    shell: bash
    run: |
      #!/usr/bin/env bash
      set -euo pipefail

      cat > /tmp/test-builder.toml << EOF
        description = "Test go builder"

        [[buildpacks]]
        image = "gcr.io/paketo-buildpacks/go:0.1.0"
        version = "0.1.0"

        [[order]]

        [[order.group]]
        id = "paketo-buildpacks/go"
        version = "0.1.0"

        [stack]
        id = "${{ inputs.stack_id }}"
        build-image = "${{ inputs.build_cnb_image }}"
        run-image = "${{ inputs.run_cnb_image }}"
      EOF

      pack create-builder test-builder -c /tmp/test-builder.toml
      pack build test-app --builder test-builder --path /tmp/go/integration/testdata/go_mod
      docker run -d -p 8080:8080 test-app
      curl http://localhost:8080
